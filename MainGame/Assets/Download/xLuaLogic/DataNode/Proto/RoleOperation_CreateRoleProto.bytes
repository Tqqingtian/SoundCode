--客户端发送创建角色消息
RoleOperation_CreateRoleProto = { ProtoCode = 10003, JobId = 0, RoleNickName = "" }
local this = RoleOperation_CreateRoleProto;

RoleOperation_CreateRoleProto.__index = RoleOperation_CreateRoleProto;

function RoleOperation_CreateRoleProto.New()
    local self = { };
    setmetatable(self, RoleOperation_CreateRoleProto);
    return self;
end

function RoleOperation_CreateRoleProto.GetProtoName()
    return "RoleOperation_CreateRole";
end


--发送协议
function RoleOperation_CreateRoleProto.SendProto(proto, isChild)

    local ms = nil;

    if (isChild == nil or isChild == false) then
        ms = CS.TQ.GameEntry.Socket.SocketSendMS;
        ms:SetLength(0);
        ms:WriteUShort(proto.ProtoCode);
    else
        ms = CS.TQ.GameEntry.Lua:DequeueMemoryStream();
        ms.SetLength(0);
    end

    ms:WriteByte(proto.JobId);
    ms:WriteUTF8String(proto.RoleNickName);

    if (isChild == nil or isChild == false) then
        if (CS.TQ.GameEntry.Lua.DebugLogProto == true) then
            print(string.format("<color=#000000>发送消息:</color><color=#000000>%s %s</color>", this.GetProtoName(), proto.ProtoCode));
            print(string.format("<color=#000000>==>>%s</color>", json.encode(proto)));
        end

        CS.TQ.GameEntry.Socket:SendMsg(ms:ToArray());
    else
        local retBuffer = ms:ToArray();
        CS.TQ.GameEntry.Lua:EnqueueMemoryStream(ms);
        return retBuffer;
    end
end


--解析协议
function RoleOperation_CreateRoleProto.GetProto(buffer, isChild)

    local proto = RoleOperation_CreateRoleProto.New(); --实例化一个协议对象
    local ms = nil;
    if (isChild == nil or isChild == false) then
        ms = CS.TQ.GameEntry.Lua:LoadSocketReceiveMS(buffer);
    else
        ms = CS.TQ.GameEntry.Lua:DequeueMemoryStreamAndLoadBuffer(buffer);
    end

    proto.JobId = ms:ReadByte();
    proto.RoleNickName = ms:ReadUTF8String();

    if (isChild == nil or isChild == false) then
        if (CS.TQ.GameEntry.Lua.DebugLogProto == true) then
            print(string.format("<color=#000000>接收消息:</color><color=#000000>%s %s</color>", this.GetProtoName(), proto.ProtoCode));
            print(string.format("<color=#000000>==>>%s</color>", json.encode(proto)));
        end
    end

    return proto;
end