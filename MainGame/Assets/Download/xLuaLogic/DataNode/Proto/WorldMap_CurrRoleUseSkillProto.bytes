--客户端发送角色使用技能消息
WorldMap_CurrRoleUseSkillProto = { ProtoCode = 13010, SkillId = 0, SkillLevel = 0, RolePosX = 0, RolePosY = 0, RolePosZ = 0, RoleYAngle = 0, BeAttackCount = 0, ItemTable = { } }
local this = WorldMap_CurrRoleUseSkillProto;

WorldMap_CurrRoleUseSkillProto.__index = WorldMap_CurrRoleUseSkillProto;

function WorldMap_CurrRoleUseSkillProto.New()
    local self = { };
    setmetatable(self, WorldMap_CurrRoleUseSkillProto);
    return self;
end

function WorldMap_CurrRoleUseSkillProto.GetProtoName()
    return "WorldMap_CurrRoleUseSkill";
end


--定义被攻击者
Item = { BeAttackRoleId = 0 }
Item.__index = Item;
function Item.New()
    local self = { };
    setmetatable(self, Item);
    return self;
end


--发送协议
function WorldMap_CurrRoleUseSkillProto.SendProto(proto, isChild)

    local ms = nil;

    if (isChild == nil or isChild == false) then
        ms = CS.TQ.GameEntry.Socket.SocketSendMS;
        ms:SetLength(0);
        ms:WriteUShort(proto.ProtoCode);
    else
        ms = CS.TQ.GameEntry.Lua:DequeueMemoryStream();
        ms.SetLength(0);
    end

    ms:WriteInt(proto.SkillId);
    ms:WriteInt(proto.SkillLevel);
    ms:WriteFloat(proto.RolePosX);
    ms:WriteFloat(proto.RolePosY);
    ms:WriteFloat(proto.RolePosZ);
    ms:WriteFloat(proto.RoleYAngle);
    ms:WriteInt(proto.BeAttackCount);
    for i = 1, proto.BeAttackCount, 1 do
        local item = proto.ItemTable[i];
        ms:WriteInt(item.BeAttackRoleId);
    end

    if (isChild == nil or isChild == false) then
        if (CS.TQ.GameEntry.Lua.DebugLogProto == true) then
            print(string.format("<color=#000000>发送消息:</color><color=#000000>%s %s</color>", this.GetProtoName(), proto.ProtoCode));
            print(string.format("<color=#000000>==>>%s</color>", json.encode(proto)));
        end

        CS.TQ.GameEntry.Socket:SendMsg(ms:ToArray());
    else
        local retBuffer = ms:ToArray();
        CS.TQ.GameEntry.Lua:EnqueueMemoryStream(ms);
        return retBuffer;
    end
end


--解析协议
function WorldMap_CurrRoleUseSkillProto.GetProto(buffer, isChild)

    local proto = WorldMap_CurrRoleUseSkillProto.New(); --实例化一个协议对象
    local ms = nil;
    if (isChild == nil or isChild == false) then
        ms = CS.TQ.GameEntry.Lua:LoadSocketReceiveMS(buffer);
    else
        ms = CS.TQ.GameEntry.Lua:DequeueMemoryStreamAndLoadBuffer(buffer);
    end

    proto.SkillId = ms:ReadInt();
    proto.SkillLevel = ms:ReadInt();
    proto.RolePosX = ms:ReadFloat();
    proto.RolePosY = ms:ReadFloat();
    proto.RolePosZ = ms:ReadFloat();
    proto.RoleYAngle = ms:ReadFloat();
    proto.BeAttackCount = ms:ReadInt();
	proto.ItemTable = {};
    for i = 1, proto.BeAttackCount, 1 do
        local _Item = Item.New();
        _Item.BeAttackRoleId = ms:ReadInt();
        proto.ItemTable[#proto.ItemTable+1] = _Item;
    end

    if (isChild == nil or isChild == false) then
        if (CS.TQ.GameEntry.Lua.DebugLogProto == true) then
            print(string.format("<color=#000000>接收消息:</color><color=#000000>%s %s</color>", this.GetProtoName(), proto.ProtoCode));
            print(string.format("<color=#000000>==>>%s</color>", json.encode(proto)));
        end
    end

    return proto;
end