--客户端发送自身坐标
WorldMap_PosProto = { ProtoCode = 13003, x = 0, y = 0, z = 0, yAngle = 0 }
local this = WorldMap_PosProto;

WorldMap_PosProto.__index = WorldMap_PosProto;

function WorldMap_PosProto.New()
    local self = { };
    setmetatable(self, WorldMap_PosProto);
    return self;
end

function WorldMap_PosProto.GetProtoName()
    return "WorldMap_Pos";
end


--发送协议
function WorldMap_PosProto.SendProto(proto, isChild)

    local ms = nil;

    if (isChild == nil or isChild == false) then
        ms = CS.TQ.GameEntry.Socket.SocketSendMS;
        ms:SetLength(0);
        ms:WriteUShort(proto.ProtoCode);
    else
        ms = CS.TQ.GameEntry.Lua:DequeueMemoryStream();
        ms.SetLength(0);
    end

    ms:WriteFloat(proto.x);
    ms:WriteFloat(proto.y);
    ms:WriteFloat(proto.z);
    ms:WriteFloat(proto.yAngle);

    if (isChild == nil or isChild == false) then
        if (CS.TQ.GameEntry.Lua.DebugLogProto == true) then
            print(string.format("<color=#000000>发送消息:</color><color=#000000>%s %s</color>", this.GetProtoName(), proto.ProtoCode));
            print(string.format("<color=#000000>==>>%s</color>", json.encode(proto)));
        end

        CS.TQ.GameEntry.Socket:SendMsg(ms:ToArray());
    else
        local retBuffer = ms:ToArray();
        CS.TQ.GameEntry.Lua:EnqueueMemoryStream(ms);
        return retBuffer;
    end
end


--解析协议
function WorldMap_PosProto.GetProto(buffer, isChild)

    local proto = WorldMap_PosProto.New(); --实例化一个协议对象
    local ms = nil;
    if (isChild == nil or isChild == false) then
        ms = CS.TQ.GameEntry.Lua:LoadSocketReceiveMS(buffer);
    else
        ms = CS.TQ.GameEntry.Lua:DequeueMemoryStreamAndLoadBuffer(buffer);
    end

    proto.x = ms:ReadFloat();
    proto.y = ms:ReadFloat();
    proto.z = ms:ReadFloat();
    proto.yAngle = ms:ReadFloat();

    if (isChild == nil or isChild == false) then
        if (CS.TQ.GameEntry.Lua.DebugLogProto == true) then
            print(string.format("<color=#000000>接收消息:</color><color=#000000>%s %s</color>", this.GetProtoName(), proto.ProtoCode));
            print(string.format("<color=#000000>==>>%s</color>", json.encode(proto)));
        end
    end

    return proto;
end